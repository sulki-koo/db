-- 그룹핑 실습

-- 1) 동일한 직무를 수행하는 직원들의 직무아이디와 직원 수를 조회
SELECT JOB_ID, SUM(EMPLOYEE_ID) 
FROM EMPLOYEES
GROUP BY JOB_ID; 

-- 2) 동일한 월급을 받는 직원들의 월급과 직원 수를 조회
SELECT SALARY, COUNT(EMPLOYEE_ID) 
FROM EMPLOYEES
GROUP BY SALARY
ORDER BY SALARY;

-- 3) 부서별로 부서아이디, 소속직원수, 월급합계를 조회
--     단, 부서ID가 NULL인 것은 제외
SELECT DEPARTMENT_ID, COUNT(EMPLOYEE_ID), SUM(SALARY) 
FROM EMPLOYEES
WHERE DEPARTMENT_ID IS NOT NULL
GROUP BY DEPARTMENT_ID
ORDER BY DEPARTMENT_ID;

-- 4) 부서별로 부서아이디, 최대급여, 최소급여, 최대급여와 최소급여의 차를 조회
--    단, 부서아이디가 NULL인 것은 제외
SELECT DEPARTMENT_ID, MAX(SALARY) AS 최대급여, MIN(SALARY) AS 최소급여, MAX(SALARY)-MIN(SALARY) AS "차액"
FROM EMPLOYEES
WHERE DEPARTMENT_ID IS NOT NULL
GROUP BY DEPARTMENT_ID 
ORDER BY DEPARTMENT_ID;

-- 5) 부서별로 직원의 수가 5명 이상인 부서의 부서아이디와 직원 수를 조회
SELECT DEPARTMENT_ID, COUNT(EMPLOYEE_ID) AS "직원수"
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
HAVING COUNT(DEPARTMENT_ID) >= 5 
ORDER BY DEPARTMENT_ID;

-- 6) 커미션퍼센트가 NULL이 아니면서 동일한 값인 직원들의 
--    커미션퍼센트와 직원 수를 조회
SELECT COMMISSION_PCT, COUNT(EMPLOYEE_ID) AS "직원수"
FROM EMPLOYEES
WHERE COMMISSION_PCT IS NOT NULL 
GROUP BY COMMISSION_PCT
ORDER BY COMMISSION_PCT;

-- 7) 6)에서 직원수가 3~5 범위에 있는 것들만 조회
SELECT COMMISSION_PCT, COUNT(EMPLOYEE_ID) AS "직원수"
FROM EMPLOYEES
WHERE COMMISSION_PCT IS NOT NULL 
GROUP BY COMMISSION_PCT
HAVING COUNT(EMPLOYEE_ID) BETWEEN 3 AND 5
ORDER BY COMMISSION_PCT;

-- 8) NULL이 아니고 0.3을 넘는 커미션퍼센트인 직원들에 대해
--    커미션퍼센트별로 커미션퍼센트와 직원 수를 조회
SELECT COMMISSION_PCT, COUNT(EMPLOYEE_ID) AS "직원수"
FROM EMPLOYEES
WHERE COMMISSION_PCT IS NOT NULL AND COMMISSION_PCT > 0.3
GROUP BY COMMISSION_PCT
ORDER BY COMMISSION_PCT;

-- 9) MANAGER_ID가 존재하는 부서들 중에서 LOCATION_ID별로
--    LOCATION_IT와 부서의 수를 조회
SELECT LOCATION_ID, COUNT(DEPARTMENT_ID) AS "부서의 수"
FROM DEPARTMENTS
WHERE MANAGER_ID IS NOT NULL
GROUP BY LOCATION_ID
ORDER BY LOCATION_ID;

-- 10) 부서별로 고용년도가 같은 직원들의 부서아이디와 고용년도, 직원 수를
--    부서아이디가 큰 순으로 정렬하여 조회
SELECT DEPARTMENT_ID, TO_CHAR(HIRE_DATE,'YYYY'), COUNT(EMPLOYEE_ID) AS 직원수
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID, TO_CHAR(HIRE_DATE,'YYYY')
ORDER BY DEPARTMENT_ID;

-- 11) MANAGER_ID가 존재하는 직원들에 대해 부서별, MANAGER_ID별
--     부서아이디, 매니저아이디, 직원 수를 조회
--     단, 부서아이디가 NULL인 부서는 제외
SELECT DEPARTMENT_ID, MANAGER_ID, COUNT(EMPLOYEE_ID) AS 직원수
FROM EMPLOYEES
WHERE MANAGER_ID IS NOT NULL AND DEPARTMENT_ID IS NOT NULL
GROUP BY ROLLUP(DEPARTMENT_ID, MANAGER_ID)
ORDER BY DEPARTMENT_ID;

-- 12) 국가별, 위치별, 부서별, 직무별 직원의 수를 조회
SELECT COUNTRY_ID, LOCATION_ID, DEPARTMENT_ID, JOB_ID, COUNT(EMPLOYEE_ID) AS 직원수
FROM EMP_DETAILS_VIEW
GROUP BY ROLLUP(COUNTRY_ID, LOCATION_ID, DEPARTMENT_ID, JOB_ID);

-- 13) 연도별 입사직원의 수를 조회
SELECT TO_CHAR(HIRE_DATE,'YYYY'), COUNT(EMPLOYEE_ID) AS 직원수
FROM EMPLOYEES
GROUP BY TO_CHAR(HIRE_DATE,'YYYY')
ORDER BY TO_CHAR(HIRE_DATE,'YYYY');


-- 14) 전화번호 중 동일한 지역번호을 사용하는 직원의 수를 조회
SELECT CASE WHEN (LENGTH(PHONE_NUMBER)-LENGTH(REPLACE(PHONE_NUMBER,'.',''))) = 2 THEN SUBSTR(PHONE_NUMBER,1,INSTR(PHONE_NUMBER,'.')-1)
			ELSE SUBSTR(SUBSTR(SUBSTR(PHONE_NUMBER,INSTR(PHONE_NUMBER,'.')+1),INSTR(SUBSTR(PHONE_NUMBER,INSTR(PHONE_NUMBER,'.')+1),'.')+1),1,
			INSTR(SUBSTR(SUBSTR(PHONE_NUMBER,INSTR(PHONE_NUMBER,'.')+1),INSTR(SUBSTR(PHONE_NUMBER,INSTR(PHONE_NUMBER,'.')+1),'.')+1),'.')-1)
			END AS 지역번호, COUNT(EMPLOYEE_ID) AS 직원수
FROM EMPLOYEES
GROUP BY CASE WHEN (LENGTH(PHONE_NUMBER)-LENGTH(REPLACE(PHONE_NUMBER,'.',''))) = 2 THEN SUBSTR(PHONE_NUMBER,1,INSTR(PHONE_NUMBER,'.')-1)
			ELSE SUBSTR(SUBSTR(SUBSTR(PHONE_NUMBER,INSTR(PHONE_NUMBER,'.')+1),INSTR(SUBSTR(PHONE_NUMBER,INSTR(PHONE_NUMBER,'.')+1),'.')+1),1,
			INSTR(SUBSTR(SUBSTR(PHONE_NUMBER,INSTR(PHONE_NUMBER,'.')+1),INSTR(SUBSTR(PHONE_NUMBER,INSTR(PHONE_NUMBER,'.')+1),'.')+1),'.')-1)
			END;
		
SELECT 
	CASE WHEN REGEXP_COUNT(PHONE_NUMBER, '\.') >= 3 THEN REGEXP_SUBSTR(PHONE_NUMBER,'[^\.]+',1,3)
		 ELSE REGEXP_SUBSTR(PHONE_NUMBER,'[^\.]+')
		 END AS 지역번호, COUNT(EMPLOYEE_ID) AS 직원수
FROM EMPLOYEES
GROUP BY CASE WHEN REGEXP_COUNT(PHONE_NUMBER, '\.') >= 3 THEN REGEXP_SUBSTR(PHONE_NUMBER,'[^\.]+',1,3)
		 ELSE REGEXP_SUBSTR(PHONE_NUMBER,'[^\.]+')
		 END;
		
		
-- 단, 지역번호는 앞의 3자리로 함
SELECT SUBSTR(PHONE_NUMBER,1,3), COUNT(EMPLOYEE_ID) AS 직원수
FROM EMPLOYEES
GROUP BY SUBSTR(PHONE_NUMBER,1,3);
		
SELECT * FROM EMPLOYEES;
-- 15) 부서별 연간총급여((월급+월급*커미션퍼센트)*12)를 산출하고
--       연간총급여가 높은 순으로 부서아이디와 연간총급여를 조회
--       단, 부서가 정해지지 않은 경우는 제외
SELECT DEPARTMENT_ID, SUM(SALARY+SALARY*NVL(COMMISSION_PCT,0))*12 AS "연간총급여"
FROM EMPLOYEES
WHERE DEPARTMENT_ID IS NOT NULL
GROUP BY DEPARTMENT_ID
ORDER BY "연간총급여" DESC;

-- 16) 월급이 10000이상인 직원의 수와 10000미만인 직원의 수를 조회
SELECT COUNT(*) FROM EMPLOYEES WHERE SALARY >= 10000
UNION
SELECT COUNT(*) FROM EMPLOYEES WHERE SALARY < 10000;

-- 17) 부서명에 'IT'가 포함된 부서의 수와 그렇지 않은 부서의 수를 조회
SELECT COUNT(DEPARTMENT_NAME) FROM DEPARTMENTS WHERE INSTR(DEPARTMENT_NAME,'IT')>=1
UNION
SELECT COUNT(DEPARTMENT_NAME) FROM DEPARTMENTS WHERE INSTR(DEPARTMENT_NAME,'IT')=0;

-- 18) 2006년 이전에 입사한 직원들의 월급합계와 2006년 이후에 입사한
--       직원들의 월급합계를 조회
SELECT SUM(SALARY) FROM EMPLOYEES WHERE TO_CHAR(HIRE_DATE,'YYYY')<2006
UNION
SELECT SUM(SALARY) FROM EMPLOYEES WHERE TO_CHAR(HIRE_DATE,'YYYY')>2006;

SELECT SUM(SALARY) FROM EMPLOYEES WHERE TO_DATE(HIRE_DATE)<TO_DATE('2006-01-01') 
UNION
SELECT SUM(SALARY) FROM EMPLOYEES WHERE TO_DATE(HIRE_DATE)>=TO_DATE('2007-01-01');

-- 19) 국가별, 지역별, 부서별 직원 수와 월급합계를 조회
SELECT COUNTRY_ID, LOCATION_ID, DEPARTMENT_ID, COUNT(EMPLOYEE_ID) AS 직원수, SUM(SALARY) AS 월급합계
FROM EMP_DETAILS_VIEW
GROUP BY ROLLUP(COUNTRY_ID, LOCATION_ID, DEPARTMENT_ID);

-- 20) 직무명에 'Sales'가 들어가는 직원들의 부서별 월급합계를 조회
SELECT DEPARTMENT_ID, JOB_TITLE, SUM(SALARY) AS 월급합계
FROM EMP_DETAILS_VIEW
WHERE INSTR(JOB_TITLE,'Sales')!=0
GROUP BY DEPARTMENT_ID, JOB_TITLE;
