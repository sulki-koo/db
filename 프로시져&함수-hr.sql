-- 프로시져 (PROCEDURE)
-- 기능을 수행하기 위한 코드 블럭
-- 반환값 없음

-- 익명프로시져
DECLARE
	V_NUM NUMBER;
BEGIN
	V_NUM := 100;
	P(V_NUM);
END;

-- 기명프로시져 생성
CREATE OR REPLACE PROCEDURE PROC_TEST(P_IN IN NUMBER)
IS 
BEGIN 
	P('IN 파라미터 P_IN변수의 값:'||P_IN);
END;

-- 기명프로시져 호출
BEGIN
	PROC_TEST(50);
	PROC_TEST(100);
END;
--SET SERVEROUTPUT ON
CALL PROC_TEST(50);

-- IN, OUT, IN OUT 파라미터를 모두 사용하는 프로시져
CREATE OR REPLACE PROCEDURE PROC_TEST2(
	P_IN IN NUMBER,
	P_OUT OUT NUMBER,
	P_INOUT IN OUT NUMBER
)
IS 
-- 변수
BEGIN 
	P('P_IN 변수가 전달받은 값:'||P_IN);
	P('P_INOUT 변수가 전달받은 값:'||P_INOUT);
	P_OUT := 40;
	P_INOUT := 50;
END;

-- PROC_TEST2를 호출하는 익명 프로시져
DECLARE 
	V1 NUMBER := 20;
	V2 NUMBER := 30;
BEGIN
	P('프로시져 호출 전 V1변수의 값:'||V1); -- 20
	PROC_TEST2(10,V1,V2); -- 10,20,30
	P('프로시져의 P_OUT변수가 보낸 값:'||V1); -- 40
	P('프로시져의 P_INOUT변수가 보낸 값:'||V2); -- 50
END;

-- 실습 : PROC_TEST3 프로시져에 IN파라미터 2개, OUT파라미터 1개를 선언하고
--       2개의 정수를 입력하면 덧셈 결과를 OUT파라미터를 통해 출력
CREATE OR REPLACE PROCEDURE PROC_TEST3(
	P_IN1 IN NUMBER, P_IN2 IN NUMBER, P_OUT OUT NUMBER)
IS
BEGIN
	P_OUT := P_IN1 + P_IN2;
	P(P_IN1||'+'||P_IN2||'='||P_OUT);
END;

DECLARE V1 NUMBER;
BEGIN PROC_TEST3(150,50,V1);
END;

SELECT * FROM DEPT;

-- 함수 (FUNCITION)
-- 기능을 수행하기 위한 코드 블록 (반환타입과 반환값이 있음)
-- OUT, IN OUT 파라미터 없음
CREATE OR REPLACE FUNCTION FUNC_GETDEPTID(
	P_EMP_ID EMPLOYEES.EMPLOYEE_ID%TYPE)
RETURN NUMBER -- 반환타입
IS 
 	V_DEPT_ID EMPLOYEES.DEPARTMENT_ID%TYPE;
BEGIN
	SELECT DEPARTMENT_ID INTO V_DEPT_ID
	FROM EMPLOYEES
	WHERE EMPLOYEE_ID = P_EMP_ID;
	RETURN V_DEPT_ID; -- 반환값
END;

-- 함수를 호출
SELECT FUNC_GETDEPTID(100) FROM DUAL;

-- 실습 : 부서아이디를 입력하면 해당 부서의 직원수를 반환하는 FUNC_EMP_CNT
--       함수를 생성하고 출력
CREATE OR REPLACE FUNCTION FUNC_EMP_CNT(
	P_DEPT_ID EMPLOYEES.DEPARTMENT_ID%TYPE 
)
RETURN NUMBER 
IS 
	V_CNT NUMBER;
BEGIN
	SELECT COUNT(*) INTO V_CNT
	FROM EMPLOYEES
	WHERE DEPARTMENT_ID = P_DEPT_ID;
	RETURN V_CNT;
END;

SELECT FUNC_EMP_CNT(50) FROM DUAL;
SELECT * FROM EMPLOYEES;

-- 실습 : 직원아이디를 입력하면 직원의 풀네임을 반환하는 FUNC_EMP_FULLNAME
--       함수를 생성하고 출력
CREATE OR REPLACE FUNCTION FUNC_EMP_FULLNAME (
	P_EMP_ID EMPLOYEES.EMPLOYEE_ID%TYPE 
)
RETURN VARCHAR2 
IS
	V_FN EMPLOYEES.FIRST_NAME%TYPE;
	V_LN EMPLOYEES.LAST_NAME%TYPE;
BEGIN
	SELECT FIRST_NAME, LAST_NAME INTO V_FN, V_LN
	FROM EMPLOYEES 
	WHERE EMPLOYEE_ID = P_EMP_ID;
	RETURN V_FN||' '||V_LN;
END;

SELECT FUNC_EMP_FULLNAME(169) FROM DUAL;

