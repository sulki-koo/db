-- PL/SQL 실습

-- 1) 주민등록번호로 남성/여성 구분하여 출력 (IF 버전)
DECLARE
	V_SNO CHAR(14) := '990101-2222222';
BEGIN
	IF SUBSTR(V_SNO,8,1) = '1' OR SUBSTR(V_SNO,8,1) = '3' THEN P('남성');
	ELSE P('여성');
	END IF;
END;


-- 2) 주민등록번호로 남성/여성 구분하여 출력 (CASE 버전)
DECLARE
	V_SNO CHAR(14) := '990101-222222';
BEGIN
	CASE SUBSTR(V_SNO,8,1)
		WHEN '1'  THEN P('남성');
		WHEN '2'  THEN P('여성');
		WHEN '3'  THEN P('남성');
		WHEN '4'  THEN P('여성');
		END CASE;
END;

--PUT 써야 옆으로 찍힘...
-- 프로시져 생성(옆으로 출력)
CREATE OR REPLACE PROCEDURE P2(P_STR VARCHAR2)
IS 
BEGIN 
	DBMS_OUTPUT.PUT(P_STR);
END;

-- 3) 구구단 출력하기
DECLARE
	I NUMBER := 2;
	J NUMBER := 1;
BEGIN 
	WHILE I < 10
	LOOP
		J := 1;
		WHILE J < 9
		LOOP
			P2(I||'X'||J||'='||I*J||' ');
			J := J+1;
		END LOOP;
		P(I||'X'||J||'='||I*J||' ');
		I := I+1;
	END LOOP;
END;


-- 4) 별 출력하기 1
--1  1
--2  12
--3  123
--4  1234
--5  12345
BEGIN
	 FOR I IN 1..5 LOOP
		FOR J IN 1..I LOOP
			P2('*');
			END LOOP;
	 	P(NULL);
	 END LOOP;
END;


-- 5) 별 출력하기 2
--12345
--o1234
--oo123
--ooo12
--oooo1
BEGIN
	 FOR I IN REVERSE 1..5 LOOP
		FOR J IN 1..5 LOOP
				IF J < I THEN P2('o');
				ELSE P2('*');
				END IF;
			END LOOP;
	 	P(NULL);
	 END LOOP;
END;

-- 6) 별 출력하기 3
--oooo1
--ooo123
--oo12345
--o1234567
--123455678

BEGIN
	 FOR I IN 1..5 LOOP
		FOR J IN REVERSE I..4 LOOP
			P2('o');
			END LOOP;
			FOR J IN 1..(I*2-1) LOOP
			 P2('*');
			END LOOP;
	 	P(NULL);
	 END LOOP;
END;

-- 레코드&컬렉션 실습

-- 1) EMPLOYEES 테이블에서 EMPLOYEE_ID가 105번인 직원의 정보를
--    %ROWTYPE을 사용해 출력
DECLARE 
	TYPE TYPE_EMP IS TABLE OF EMPLOYEES%ROWTYPE;
	V_TYPE_EMP TYPE_EMP;
BEGIN
	V_TYPE_EMP := TYPE_EMP();
	FOR EACHROW IN(SELECT * FROM EMPLOYEES WHERE EMPLOYEE_ID = 105)
		LOOP 
			V_TYPE_EMP.EXTEND;
			V_TYPE_EMP(V_TYPE_EMP.LAST) := EACHROW;
		P(V_TYPE_EMP(V_TYPE_EMP.LAST).EMPLOYEE_ID);
	END LOOP;
END;

DECLARE 
	V_EMP_ROW EMPLOYEES%ROWTYPE;
BEGIN
	SELECT * INTO V_EMP_ROW
	FROM EMPLOYEES E WHERE EMPLOYEE_ID = 105;
	P(V_EMP_ROW.EMPLOYEE_ID);
END;

-- 2) JOBS 테이블의 모든 컬럼을 조회
--   2-1) %ROWTYPE과 CURSOR를 사용하여 출력
DECLARE
	V_JOBS_ROW JOBS%ROWTYPE;
	CURSOR CUR_JOBS IS SELECT * FROM JOBS;
BEGIN
	FOR V_JOBS_ROW IN CUR_JOBS LOOP 
		P(V_JOBS_ROW.JOB_ID||' '||V_JOBS_ROW.JOB_TITLE||' '||
		V_JOBS_ROW.MIN_SALARY||' '||V_JOBS_ROW.MAX_SALARY);
	END LOOP;
END;

--   2-2) 사용자정의레코드와 CURSOR를 사용하여 출력
DECLARE
	TYPE REC_JOBS IS RECORD(
	J_ID JOBS.JOB_ID%TYPE,
	J_T JOBS.JOB_TITLE%TYPE,
	J_MIN JOBS.MIN_SALARY%TYPE,
	J_MAX JOBS.MAX_SALARY%TYPE);
	V_REC_JOBS REC_JOBS;
	CURSOR CUR_JOBS IS SELECT * FROM JOBS;
BEGIN
	FOR EACHROW IN CUR_JOBS LOOP 
		V_REC_JOBS.J_ID := EACHROW.JOB_ID;
		V_REC_JOBS.J_T := EACHROW.JOB_TITLE;
		V_REC_JOBS.J_MIN := EACHROW.MIN_SALARY;
		V_REC_JOBS.J_MAX := EACHROW.MAX_SALARY;
		P(V_REC_JOBS.J_ID||' '||V_REC_JOBS.J_T||' '||
		V_REC_JOBS.J_MIN||' '||V_REC_JOBS.J_MAX);
	END LOOP;
END;

-- 3) 부서아이디가 50인 직원들의 부서ID, 부서명, 직원ID, 직원풀네임, 월급을 조회
--   3-1) CURSOR를 사용하여 출력
DECLARE
	CURSOR CUR_EMP_DEPT IS 
	SELECT D.DEPARTMENT_ID, D.DEPARTMENT_NAME, E.EMPLOYEE_ID, 
		   E.FIRST_NAME, E.LAST_NAME, E.SALARY
	FROM EMPLOYEES E, DEPARTMENTS D
	WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID;
BEGIN
	FOR EACHROW IN CUR_EMP_DEPT LOOP 
		P(EACHROW.DEPARTMENT_ID||' '||EACHROW.DEPARTMENT_NAME||' '||
		EACHROW.EMPLOYEE_ID||' '||EACHROW.FIRST_NAME||' '||EACHROW.LAST_NAME||' '||
		EACHROW.SALARY
		);
	END LOOP;
END;

--   3-1) CURSOR를 사용하여 출력
BEGIN
   FOR EACHROW IN (
      SELECT D.DEPARTMENT_ID, D.DEPARTMENT_NAME,
         E.FIRST_NAME||' '||E.LAST_NAME FULLNAME, E.SALARY
      FROM EMPLOYEES E, DEPARTMENTS D
      WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
         AND D.DEPARTMENT_ID = 50) 
   LOOP
      P(
         EACHROW.DEPARTMENT_ID||' '||
         EACHROW.DEPARTMENT_NAME||' '||
         EACHROW.FULLNAME||' '||
         EACHROW.SALARY
      );
   END LOOP;   
END;

--   3-2) 사용자정의레코드와 CURSOR를 사용해서 출력
DECLARE 
	TYPE REC_EMP_DERT IS RECORD(
	EMP_ID EMPLOYEES.EMPLOYEE_ID%TYPE,
	EMP_FN EMPLOYEES.FIRST_NAME%TYPE,
	EMP_LN EMPLOYEES.LAST_NAME%TYPE,
	EMP_S EMPLOYEES.SALARY%TYPE,
	DEPT_ID DEPARTMENTS.DEPARTMENT_ID%TYPE,
	DEPT_NAME DEPARTMENTS.DEPARTMENT_NAME%TYPE
	);
	CURSOR CUR_EMP_DEPT IS
	SELECT D.DEPARTMENT_ID, D.DEPARTMENT_NAME, E.EMPLOYEE_ID, 
		   E.FIRST_NAME, E.LAST_NAME, E.SALARY
	FROM EMPLOYEES E, DEPARTMENTS D
	WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID;
	V_REC_ED REC_EMP_DERT;
BEGIN
	FOR V_REC_ED IN CUR_EMP_DEPT LOOP
		P(V_REC_ED.DEPARTMENT_ID||' '||V_REC_ED.DEPARTMENT_NAME||' '||
		V_REC_ED.EMPLOYEE_ID||' '||V_REC_ED.FIRST_NAME||' '||
		V_REC_ED.LAST_NAME||' '||V_REC_ED.SALARY
		);
	END LOOP;
END;



--   3-2) 사용자정의레코드와 CURSOR를 사용해서 출력
DECLARE
   TYPE TYPE_EMPDEPT IS RECORD (
      DEPT_ID DEPARTMENTS.DEPARTMENT_ID%TYPE,
      DEPT_NAME DEPARTMENTS.DEPARTMENT_NAME%TYPE,
      FULLNAME VARCHAR2(200),
      EMP_SAL EMPLOYEES.SALARY%TYPE
   );
   V_EMPDEPT TYPE_EMPDEPT;
BEGIN
   FOR V_EMPDEPT IN (
      SELECT D.DEPARTMENT_ID DEPT_ID, D.DEPARTMENT_NAME DEPT_NAME,
         E.FIRST_NAME||' '||E.LAST_NAME FULLNAME, E.SALARY
      FROM EMPLOYEES E, DEPARTMENTS D
      WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
         AND D.DEPARTMENT_ID = 50) 
   LOOP
      P(
         V_EMPDEPT.DEPT_ID||' '||
         V_EMPDEPT.DEPT_NAME||' '||
         V_EMPDEPT.FULLNAME||' '||
         V_EMPDEPT.SALARY
      );
   END LOOP;   
END;


-- 4) 직원들 중 연봉((월급 + 월급*커미션퍼센트)*12) 상위 10명의 정보를 조회
--   4-1) 연관배열, %ROWTYPE, CURSOR를 사용하여 출력
--   4-2) 연관배열, 사용자정의레코드, CURSOR를 사용하여 출력
DECLARE
	TYPE AA_SALARY IS TABLE OF EMPLOYEES%ROWTYPE
	INDEX BY PLS_INTEGER;
	V_AA_SALARY AA_SALARY;
	I NUMBER := 1;
BEGIN
	FOR V_EMP IN (
		SELECT E.*, 
		NVL(E.SALARY+E.SALARY*E.COMMISSION_PCT,0)*12 YS
	FROM EMPLOYEES E
	ORDER BY YS DESC)
	LOOP
		EXIT WHEN I>10;
		V_AA_SALARY(I).SALARY := V_EMP.YS;
		P(I||'위 '||
		V_AA_SALARY(I).SALARY||'원 '||
		V_EMP.FIRST_NAME||' '||
		V_EMP.LAST_NAME);
		I := I+1;
	END LOOP;
END;


-- 5) 부서별 연봉((월급 + 월급*커미션퍼센트)*12) 상위 3명의 정보를 조회
--    연관배열, 사용자정의레코드, CURSOR를 사용하여 출력
DECLARE
	TYPE AA_SALARY IS TABLE OF EMPLOYEES%ROWTYPE
	INDEX BY PLS_INTEGER;
	V_AA_SALARY AA_SALARY;
	I NUMBER := 1;
BEGIN
	FOR V_AA_SALARY IN (
		SELECT E.*, 
		NVL(E.SALARY+E.SALARY*E.COMMISSION_PCT,0)*12 YS
	FROM EMPLOYEES E
	ORDER BY YS DESC)
	LOOP
		EXIT WHEN I>3;
		P(I||'위 '||V_AA_SALARY.YS||'원 '||
		V_AA_SALARY.FIRST_NAME||' '||V_AA_SALARY.LAST_NAME);
		I := I+1;
	END LOOP;
END;


-- 4) 직원들 중 연봉((월급 + 월급*커미션퍼센트)*12) 상위 10명의 정보를 조회

--   4-1) 연관배열, %ROWTYPE, CURSOR를 사용하여 출력
DECLARE
   TYPE AA_EMP IS TABLE OF EMPLOYEES%ROWTYPE
   INDEX BY PLS_INTEGER;
   V_AA_EMP AA_EMP;
BEGIN
   FOR V_ROW_EMP IN (
      SELECT * FROM EMPLOYEES
      WHERE (SALARY+SALARY*COMMISSION_PCT)*12
         > (SELECT AVG((SALARY+SALARY*COMMISSION_PCT)*12)
             FROM EMPLOYEES)
         AND ROWNUM < 11
      ORDER BY (SALARY+SALARY*COMMISSION_PCT)*12 DESC
   )
   LOOP
      V_AA_EMP(V_ROW_EMP.EMPLOYEE_ID) := V_ROW_EMP;
      P(
         V_AA_EMP(V_ROW_EMP.EMPLOYEE_ID).EMPLOYEE_ID||', '||
         V_AA_EMP(V_ROW_EMP.EMPLOYEE_ID).FIRST_NAME||' '||
         V_AA_EMP(V_ROW_EMP.EMPLOYEE_ID).LAST_NAME||', '||
         V_AA_EMP(V_ROW_EMP.EMPLOYEE_ID).SALARY
      );
   END LOOP;   
END;

SELECT * FROM EMPLOYEES;

--   4-2) 연관배열, 사용자정의레코드, CURSOR를 사용하여 출력
DECLARE
   TYPE REC_EMP IS RECORD(
      EMPLOYEE_ID EMPLOYEES.EMPLOYEE_ID%TYPE,
      FIRST_NAME EMPLOYEES.FIRST_NAME%TYPE,
      LAST_NAME EMPLOYEES.LAST_NAME%TYPE,
      EMAIL EMPLOYEES.EMAIL%TYPE,
      PHONE_NUMBER EMPLOYEES.PHONE_NUMBER%TYPE,
      HIRE_DATE EMPLOYEES.HIRE_DATE%TYPE,
      JOB_ID EMPLOYEES.JOB_ID%TYPE,
      SALARY EMPLOYEES.SALARY%TYPE,
      COMMISSION_PCT EMPLOYEES.COMMISSION_PCT%TYPE,
      MANAGER_ID EMPLOYEES.MANAGER_ID%TYPE,
      DEPARTMENT_ID EMPLOYEES.DEPARTMENT_ID%TYPE
   );
   TYPE AA_EMP IS TABLE OF REC_EMP
   INDEX BY PLS_INTEGER;
   V_AA_EMP AA_EMP;
BEGIN
   FOR V_ROW_EMP IN (
      SELECT * FROM EMPLOYEES
      WHERE (SALARY+SALARY*COMMISSION_PCT)*12
         > (SELECT AVG((SALARY+SALARY*COMMISSION_PCT)*12)
             FROM EMPLOYEES)
         AND ROWNUM < 11
      ORDER BY (SALARY+SALARY*COMMISSION_PCT)*12 DESC
   )
   LOOP
      V_AA_EMP(V_ROW_EMP.EMPLOYEE_ID) := V_ROW_EMP;
      P(
         V_AA_EMP(V_ROW_EMP.EMPLOYEE_ID).EMPLOYEE_ID||', '||
         V_AA_EMP(V_ROW_EMP.EMPLOYEE_ID).FIRST_NAME||' '||
         V_AA_EMP(V_ROW_EMP.EMPLOYEE_ID).LAST_NAME||', '||
         V_AA_EMP(V_ROW_EMP.EMPLOYEE_ID).SALARY
      );
   END LOOP;   
END;

-- 5) 부서별 연봉((월급 + 월급*커미션퍼센트)*12) 상위 3명의 정보를 조회
--    연관배열, 사용자정의레코드, CURSOR를 사용하여 출력
DECLARE
   TYPE REC_EMP IS RECORD(
      DEPARTMENT_ID EMPLOYEES.DEPARTMENT_ID%TYPE,
      EMPLOYEE_ID EMPLOYEES.EMPLOYEE_ID%TYPE,
      FULLNAME VARCHAR2(100),
      SALARY EMPLOYEES.SALARY%TYPE,
      RANKING NUMBER
   );
   V_ROW_EMP REC_EMP;
   TYPE AA_EMP IS TABLE OF REC_EMP
   INDEX BY PLS_INTEGER;
   V_AA_EMP AA_EMP;
BEGIN
   FOR V_ROW_EMP IN (
      SELECT *
      FROM (
          SELECT DEPARTMENT_ID, EMPLOYEE_ID, FIRST_NAME||' '||LAST_NAME, SALARY,
              RANK() OVER ( -- 순위 구하기
                   PARTITION BY DEPARTMENT_ID -- 파티셔닝(그룹핑) 기준 컬럼
                 ORDER BY (SALARY+SALARY*NVL(COMMISSION_PCT, 0))*12 DESC -- 정렬 기준
                ) AS RANKING
          FROM EMPLOYEES
      ) 
      WHERE RANKING <= 3 -- 파티션(그룹)별 3등까지
      ORDER BY DEPARTMENT_ID, RANKING
   )
   LOOP
      V_AA_EMP(V_ROW_EMP.EMPLOYEE_ID) := V_ROW_EMP;
      P(
         V_AA_EMP(V_ROW_EMP.EMPLOYEE_ID).DEPARTMENT_ID||', '||      
         V_AA_EMP(V_ROW_EMP.EMPLOYEE_ID).EMPLOYEE_ID||', '||
         V_AA_EMP(V_ROW_EMP.EMPLOYEE_ID).FULLNAME||', '||
         V_AA_EMP(V_ROW_EMP.EMPLOYEE_ID).SALARY
      );
   END LOOP;   
END;

