-- DML (Data Manipulation Language:데이터 조작어)
-- 데이터를 조회, 삽입, 수정, 삭제하는 SQL
-- SELECT, INSERT, UPDATE, DELETE

-- 데이터를 조회
SELECT * FROM EMPLOYEES; -- * : 모든 컬럼
SELECT FIRST_NAME, LAST_NAME FROM EMPLOYEES;

-- AS (ALIAS) : 별칭
SELECT FIRST_NAME FN, LAST_NAME LN FROM EMPLOYEES;
SELECT FIRST_NAME "F NAME", LAST_NAME "L NAME" FROM EMPLOYEES;

-- 행의 수 조회
SELECT COUNT(*) FROM EMPLOYEES;
SELECT COUNT(FIRST_NAME) FROM EMPLOYEES;
SELECT COUNT(*) FROM DEPARTMENTS; -- 27
-- NULL인 것은 카운트에서 제외
SELECT COUNT(MANAGER_ID) FROM DEPARTMENTS; -- 11

-- 문자열 접합(CONCATENATION)
SELECT 'HELLO'||''||'ORACLE' FROM DUAL;
--SELECT 'HELLO'+''+'ORACLE' FROM DUAL;

-- 연산
SELECT 1+2+3+4+5 FROM DUAL;
SELECT 123*456 FROM DUAL;

-- DISTINCT : 컬럼의 값이 같은 것들이 있으면 한번만 조회
SELECT LOCATION_ID FROM DEPARTMENTS;
SELECT DISTINCT LOCATION_ID FROM DEPARTMENTS;

-- WHERE : 행에 대한 조건 (테이블에서 한 행 한행 가져와서 조건을 검사)
SELECT * FROM EMPLOYEES WHERE EMPLOYEE_ID <= 120;

SELECT * FROM EMPLOYEES WHERE EMPLOYEE_ID <= 110 AND SALARY >= 15000; -- AND

SELECT * FROM EMPLOYEES WHERE EMPLOYEE_ID <= 110 OR SALARY >= 15000;

SELECT * FROM EMPLOYEES WHERE MOD(EMPLOYEE_ID, 100) = 0; -- MOD (나머지연산함수)

-- 데이터베이스에서는 데이터가 없음을 NULL로 표현
SELECT * FROM DEPARTMENTS WHERE MANAGER_ID IS NULL; -- 데이터가 없으면 TRUE

-- IN : 값 중에 하나랑 일치하는지
SELECT * FROM DEPARTMENTS WHERE DEPARTMENT_ID IN(10,30,50);
SELECT * FROM DEPARTMENTS WHERE DEPARTMENT_ID=10 OR DEPARTMENT_ID=30 OR DEPARTMENT_ID=50;

-- BETWEEN : 양쪽 값을 포함해서 사이에 있는지
SELECT * FROM DEPARTMENTS WHERE DEPARTMENT_ID BETWEEN 30 AND 100;

-- LIKE : 문자열이 어떤 패턴과 일치하는지
-- _:문자 한개, %:문자 0개 이상

-- FIRST_NAME이 5문자
SELECT FIRST_NAME FROM EMPLOYEES WHERE FIRST_NAME LIKE'_____';

-- FIRST_NAME이 A로 시작
SELECT FIRST_NAME FROM EMPLOYEES WHERE FIRST_NAME LIKE 'A%';

-- FIRST_NAME이 n으로 끝
SELECT FIRST_NAME FROM EMPLOYEES WHERE FIRST_NAME LIKE '%n';

-- FIRST_NAME이 e를 포함
SELECT FIRST_NAME FROM EMPLOYEES WHERE FIRST_NAME LIKE '%e%';

-- ORDER BY : 값에 따라 오름차순(ASC), 내림차순(DESC) 정렬
SELECT * FROM EMPLOYEES ORDER BY FIRST_NAME; -- ASE
SELECT * FROM EMPLOYEES ORDER BY FIRST_NAME DESC; -- DESC

-- 다차정렬
SELECT DEPARTMENT_ID, FIRST_NAME FROM EMPLOYEES ORDER BY DEPARTMENT_ID DESC, FIRST_NAME; -- 2차 정렬
















